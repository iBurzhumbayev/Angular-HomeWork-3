{"ast":null,"code":"import { createAction, createFeatureSelector, createReducer, createSelector, on, props } from \"@ngrx/store\";\nexport const COUNT_KEY = \"counter\";\nexport const increase = createAction(\"[COUNTER] increase\");\nexport const decrease = createAction(\"[COUNTER] decrease\");\nexport const clear = createAction(\"[COUNTER] clear\");\nexport const changeUpdatedAt = createAction(\"[COUNTER] change updated at\", props());\nexport const initialState = {\n  count: 0\n};\nexport const counterReducer = createReducer(initialState, on(increase, state => ({\n  ...state,\n  count: state.count + 1\n})), on(decrease, state => ({\n  ...state,\n  count: state.count - 1\n})), on(clear, state => ({\n  ...state,\n  count: 0\n})), on(changeUpdatedAt, (state, action) => ({\n  ...state,\n  updatedAt: action.updatedAt\n})));\nexport const featureSelector = createFeatureSelector(COUNT_KEY);\nexport const countSelector = createSelector(featureSelector, state => state.count);\nexport const updateAtSelector = createSelector(featureSelector, state => state.updatedAt);","map":{"version":3,"names":["createAction","createFeatureSelector","createReducer","createSelector","on","props","COUNT_KEY","increase","decrease","clear","changeUpdatedAt","initialState","count","counterReducer","state","action","updatedAt","featureSelector","countSelector","updateAtSelector"],"sources":["C:\\Users\\kzsmi\\Desktop\\Проекты\\Академия Шаг Angular\\hw-2\\src\\app\\reducers\\counter.ts"],"sourcesContent":["import {createAction, createFeatureSelector, createReducer, createSelector, on, props} from \"@ngrx/store\"\r\n\r\nexport const COUNT_KEY = \"counter\"\r\n\r\nexport const increase = createAction( \"[COUNTER] increase\");\r\nexport const decrease = createAction( \"[COUNTER] decrease\");\r\nexport const clear = createAction( \"[COUNTER] clear\");\r\nexport const changeUpdatedAt = createAction( \r\n    \"[COUNTER] change updated at\",\r\n    props<{updatedAt: number}>()\r\n);\r\n\r\nexport interface CounterState {\r\n    count: number;\r\n    updatedAt?: number;\r\n}\r\n\r\nexport const initialState: CounterState = {\r\n    count: 0\r\n}\r\n\r\nexport const counterReducer = createReducer(\r\n    initialState,\r\n    on(increase, state => ({\r\n        ...state,\r\n        count: state.count + 1\r\n    })),\r\n    on(decrease, state => ({\r\n        ...state,\r\n        count: state.count - 1\r\n    })),\r\n    on(clear, state => ({\r\n        ...state,\r\n        count: 0\r\n    })),\r\n    on(changeUpdatedAt, (state, action) => ({\r\n        ...state,\r\n        updatedAt: action.updatedAt\r\n    }))\r\n)\r\n\r\nexport const featureSelector = createFeatureSelector<CounterState>(COUNT_KEY);\r\nexport const countSelector = createSelector(\r\n    featureSelector, \r\n    state => state.count\r\n)\r\nexport const updateAtSelector = createSelector(\r\n    featureSelector, \r\n    state => state.updatedAt\r\n)\r\n"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,qBAAqB,EAAEC,aAAa,EAAEC,cAAc,EAAEC,EAAE,EAAEC,KAAK,QAAO,aAAa;AAEzG,OAAO,MAAMC,SAAS,GAAG,SAAS;AAElC,OAAO,MAAMC,QAAQ,GAAGP,YAAY,CAAE,oBAAoB,CAAC;AAC3D,OAAO,MAAMQ,QAAQ,GAAGR,YAAY,CAAE,oBAAoB,CAAC;AAC3D,OAAO,MAAMS,KAAK,GAAGT,YAAY,CAAE,iBAAiB,CAAC;AACrD,OAAO,MAAMU,eAAe,GAAGV,YAAY,CACvC,6BAA6B,EAC7BK,KAAK,EAAuB,CAC/B;AAOD,OAAO,MAAMM,YAAY,GAAiB;EACtCC,KAAK,EAAE;CACV;AAED,OAAO,MAAMC,cAAc,GAAGX,aAAa,CACvCS,YAAY,EACZP,EAAE,CAACG,QAAQ,EAAEO,KAAK,KAAK;EACnB,GAAGA,KAAK;EACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;CACxB,CAAC,CAAC,EACHR,EAAE,CAACI,QAAQ,EAAEM,KAAK,KAAK;EACnB,GAAGA,KAAK;EACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;CACxB,CAAC,CAAC,EACHR,EAAE,CAACK,KAAK,EAAEK,KAAK,KAAK;EAChB,GAAGA,KAAK;EACRF,KAAK,EAAE;CACV,CAAC,CAAC,EACHR,EAAE,CAACM,eAAe,EAAE,CAACI,KAAK,EAAEC,MAAM,MAAM;EACpC,GAAGD,KAAK;EACRE,SAAS,EAAED,MAAM,CAACC;CACrB,CAAC,CAAC,CACN;AAED,OAAO,MAAMC,eAAe,GAAGhB,qBAAqB,CAAeK,SAAS,CAAC;AAC7E,OAAO,MAAMY,aAAa,GAAGf,cAAc,CACvCc,eAAe,EACfH,KAAK,IAAIA,KAAK,CAACF,KAAK,CACvB;AACD,OAAO,MAAMO,gBAAgB,GAAGhB,cAAc,CAC1Cc,eAAe,EACfH,KAAK,IAAIA,KAAK,CAACE,SAAS,CAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}